<?php
/**
 * @file
 * This file contains all Drupal hooks for the module other than any
 * node hooks and block hooks. Those go in the [module name].chado_node.inc file
 * and [module_name].blocks.inc respectively
 *
 * @ingroup legume_featuremap
 */

function legume_featuremap_theme($existing, $type, $theme, $path) {
  $core_path = drupal_get_path('module', 'legume_featuremap');

  $items = array(
    'tripal_featuremap_base' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_featuremap_base',
      'path' => "$path/theme/templates",
    ),
    'tripal_featuremap_featurepos' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_featuremap_featurepos',
      'path' => "$path/theme/templates",
    ),
    'tripal_featuremap_publication' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_featuremap_publication',
      'path' => "$path/theme/templates",
    ),
  );
  
  return $items;
}


/**
  * hook_form_alter
  *
  * Add a validator to the search form.
  */
function legume_featuremap_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && strstr($form['#id'], 'map')) {
    $form['#validate'][] = 'legume_featuremap_form_validate';
    
    // Change default value for submit button
    $form['submit']['#value'] = 'Search';
  }
}//legume_featuremap_form_alter


/**
  * Form validator for search form. 
  * Use this to trim whitespace from text fields.
  */
function legume_featuremap_form_validate($form, &$form_state) {
  $form_state['values']['name_1']      = trim($form_state['values']['name_1']);
  $form_state['values']['description'] = trim($form_state['values']['description']);
}


/**
  * Modify view results before display. 
  */
function legume_featuremap_views_pre_render(&$view) {
  if ($view->name == 'tripal_featuremap_user_featuremaps') {
    // Remove map units column from results
    $view->field['name_1']->options['exclude'] = true;

  }
}

function legume_featuremap_views_query_alter($view, $query) {
//drupal_set_message("<pre>" . print_r($view, true) . "</pre>");
  if ($view->name == 'tripal_featuremap_user_featuremaps') {
/*would like to add citation, but unable to see how; leave this code in case a 
  solution is found.
    // Add citation to query via featuremap_pub
    $join = new views_join();
    $join->table      = 'featuremap_pub';
    $join->field      = 'featuremap_id';
    $join->left_table = 'featuremap';
    $join->left_field = 'featuremap_id';
    $join->alias      = 'featuremap_pub';
    $join->type       = 'LEFT';
    $join->extra      = array(
      array('field' => 'pub_id', 'value' => $pub_id),
    );
    $query->add_relationship('featuremap_pub', $join, 'featuremap_pub');
    
    $join = new views_join();
    $join->table      = 'pub';
    $join->field      = 'pub_id';
    $join->left_table = 'featuremap_pub';
    $join->left_field = 'pub_id';
    $join->alias      = 'pub';
    $join->type       = 'LEFT';
    $join->extra      = array(
      array('field' => 'pub_id', 'uniquename' => $citation),
    );
    $query->add_relationship('pub', $join, 'pub');
    
    $query->fields['pub'] = array(
      'field' => 'uniquename',
      'table' => 'pub',
      'alias' => 'citation',
    );
*/
    // Only want one of each map found
    $query->set_distinct(true, true);
  }
}


/**
  * getMapStocks()
  *
  * @param $map_id
  */
function getMapStocks($map_id) {
  $stocks = false;
  
  $sql = "
    SELECT s.stock_id, s.name AS mapping_population, cs.nid AS mapping_population_nid,
           parent1.name AS parent1, cs1.nid AS parent1_nid, parent2.name AS parent2, 
           cs2.nid AS parent2_nid
    FROM {featuremap_stock} fs
      INNER JOIN {stock} s ON s.stock_id=fs.stock_id
      INNER JOIN chado_stock cs ON cs.stock_id=s.stock_id
      
      LEFT OUTER JOIN {stock_relationship} sr1
        ON sr1.object_id=s.stock_id AND sr1.type_id=(SELECT cvterm_id FROM {cvterm} WHERE name='Parent1')
      LEFT OUTER JOIN {stock} parent1 ON parent1.stock_id=sr1.subject_id
      LEFT OUTER JOIN chado_stock cs1 ON cs1.stock_id=parent1.stock_id
      
      LEFT OUTER JOIN {stock_relationship} sr2
        ON sr2.object_id=s.stock_id AND sr2.type_id=(SELECT cvterm_id FROM {cvterm} WHERE name='Parent2')
      LEFT OUTER JOIN {stock} parent2 ON parent2.stock_id=sr2.subject_id
      LEFT OUTER JOIN chado_stock cs2 ON cs2.stock_id=parent2.stock_id
    WHERE featuremap_id=$map_id";
  if ($res = chado_query($sql, array())) {
    $stocks = $res->fetchObject();
  }
  
  return $stocks;
}

